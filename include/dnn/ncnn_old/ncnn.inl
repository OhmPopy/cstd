#ifndef _NCNN_INL_
#define _NCNN_INL_
#include "blob.inl"
#include "cpu.inl"
#include "layer.inl"
#include "mat.inl"
#include "mat_pixel.inl"
#include "net.inl"
#include "opencv.inl"
#include "layer/absval.inl"
#include "layer/argmax.inl"
#include "layer/batchnorm.inl"
#include "layer/bias.inl"
#include "layer/bnll.inl"
#include "layer/concat.inl"
#include "layer/convolution.inl"
#include "layer/crop.inl"
#include "layer/deconvolution.inl"
#include "layer/dropout.inl"
#include "layer/eltwise.inl"
#include "layer/elu.inl"
#include "layer/embed.inl"
#include "layer/exp.inl"
#include "layer/flatten.inl"
#include "layer/innerproduct.inl"
#include "layer/input.inl"
#include "layer/log.inl"
#include "layer/lrn.inl"
#include "layer/lstm.inl"
#include "layer/memorydata.inl"
#include "layer/mvn.inl"
#include "layer/pooling.inl"
#include "layer/power.inl"
#include "layer/prelu.inl"
#include "layer/proposal.inl"
#include "layer/reduction.inl"
#include "layer/relu.inl"
#include "layer/reshape.inl"
#include "layer/rnn.inl"
#include "layer/roipooling.inl"
#include "layer/scale.inl"
#include "layer/sigmoid.inl"
#include "layer/slice.inl"
#include "layer/softmax.inl"
#include "layer/split.inl"
#include "layer/spp.inl"
#include "layer/tanh.inl"
#include "layer/threshold.inl"
#include "layer/tile.inl"
#ifdef __arm__
#include "layer/arm/absval_arm.inl"
#include "layer/arm/batchnorm_arm.inl"
#include "layer/arm/bias_arm.inl"
#include "layer/arm/convolution_arm.inl"
#include "layer/arm/deconvolution_arm.inl"
#include "layer/arm/eltwise_arm.inl"
#include "layer/arm/innerproduct_arm.inl"
#include "layer/arm/lrn_arm.inl"
#include "layer/arm/pooling_arm.inl"
#include "layer/arm/prelu_arm.inl"
#include "layer/arm/relu_arm.inl"
#include "layer/arm/scale_arm.inl"
#include "layer/arm/sigmoid_arm.inl"
#include "layer/arm/slice_arm.inl"
#include "layer/arm/softmax_arm.inl"

#else
#include "layer/x86/convolution_x86.inl"
#endif

#endif // _NCNN_INL_
