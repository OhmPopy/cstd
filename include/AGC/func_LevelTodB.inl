// =========================================================================
//
//              dB到幅度值的转化
//
// =========================================================================
//
//　(C) 2003-2010 广州海格通信集团股份有限公司
//   作  者：   王 云 飞
//   版  本：    V 1.0
//   创建日期： 2010年1月25日
//   完成日期： 2010年1月25日
//--------------------------------------------------------------------------
//  功能说明：
//    1. 输入参数　　　　level : 　电平幅度, 输入范围[1,32767]
//    2. 输出参数　　　　dB_out :  电平幅度的对数值, Q6格式　 20*log10(level)*2.^6;
//    3. 查找表Table, 用于计算小数部分；
//    4. 计算level的冗余比特数a, 将level变化为 level = 01**,****,****,****形式;
//       取前9位计算,以后01**,****,*的后7位进行相对寻址 , 得到长度为128的表,
//       表内容 = 尾数dB = 20*log10(16384 + 相对地址*128)*64
//      例如: 相对地址 = 80;  尾数 = 16384 + 80*128 = 26624； 则尾dB数= 20*log10(26644)*64 = 5664
//    5. dB数 = 尾数dB - 385*a;         385 = [20*log10(2)*2.^6]
//--------------------------------------------------------------------------
double log2(double x) {
  return log(x)/log(2);
}
int func_LevelTodB(const double* level, int len, double* dB_out) {
  // 将电平幅度转化为对数
  int table[] = { 5394,5399,5403,5407,5412,5416,5420,5424,5428,5432,5436,5440,5444,5448,5452,5456,5460,5464,5468,5471,5475,5479,5483,5486,5490,5494,5497,5501,5504,5508,5512,5515,5519,5522,5525,5529,5532,5536,5539,5542,5546,5549,5552,5555,5559,5562,5565,5568,5571,5575,5578,5581,5584,5587,5590,5593,5596,5599,5602,5605,5608,5611,5614,5617,5620,5623,5626,5628,5631,5634,5637,5640,5643,5645,5648,5651,5654,5656,5659,5662,5664,5667,5670,5672,5675,5678,5680,5683,5685,5688,5690,5693,5696,5698,5701,5703,5706,5708,5710,5713,5715,5718,5720,5723,5725,5727,5730,5732,5735,5737,5739,5742,5744,5746,5749,5751,5753,5755,5758,5760,5762,5764,5767,5769,5771,5773,5775,5778,5780};
  //len = length( level);
  int ii;
  for (ii  = 0; ii<len; ++ii) {
    // 开始计算level的冗余比特数
    int bit_shift = 14 - (int)floor(log2(level[ii]));
    int data_shift = (int)(level[(ii)]*(1<<bit_shift));
    // 取前9位计算, 以3~9的7比特进行查表
    //bit_arry = de2bi(data_shift,16,'left-msb' );
    //Addr = bi2de(bit_arry(3:9),'left-msb' );
    int Addr = (data_shift>>7) & (127);
    // 查表
    int dB_main = table[Addr];       // 查表得尾数dB值
    dB_out[ii] = dB_main - 385*bit_shift;       //
  }
  return 0;
}