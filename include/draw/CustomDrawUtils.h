
// Global control
#define CUSTOMDRAW_THEME_BACKGROUND

// Color for item
#define RGB_ITEM_SELECTED_FILL_COLOR1      _RGB(235, 244, 254)
#define RGB_ITEM_SELECTED_FILL_COLOR2      _RGB(207, 228, 254)

#define RGB_ITEM_SELFOCUS_FILL_COLOR1      _RGB(220, 235, 252)
#define RGB_ITEM_SELFOCUS_FILL_COLOR2      _RGB(193, 219, 252)
#define RGB_ITEM_SELFOCUS_OUTER_BORDER_COLOR  _RGB(125, 162, 206)
#define RGB_ITEM_SELFOCUS_INNER_BORDER_COLOR  _RGB(235, 244, 253)

#define RGB_ITEM_SELNOFOCUS_FILL_COLOR1      _RGB(248, 248, 248)
#define RGB_ITEM_SELNOFOCUS_FILL_COLOR2      _RGB(229, 229, 229)
#define RGB_ITEM_SELNOFOCUS_OUTER_BORDER_COLOR  _RGB(217, 217, 217)
#define RGB_ITEM_SELNOFOCUS_INNER_BORDER_COLOR  _RGB(240, 240, 240)

#define RGB_ITEM_HOT_FILL_COLOR1        _RGB(250, 251, 253)
#define RGB_ITEM_HOT_FILL_COLOR2        _RGB(235, 243, 253)
#define RGB_ITEM_HOT_OUTER_BORDER_COLOR      _RGB(184, 214, 251)
#define RGB_ITEM_HOT_INNER_BORDER_COLOR      _RGB(252, 243, 254)

// Color for tooltip
#define RGB_TOOLTIP_FILL_COLOR1          _RGB(255, 255, 255)
#define RGB_TOOLTIP_FILL_COLOR2          _RGB(201, 217, 239)
#define RGB_TOOLTIP_TEXT_COLOR          _RGB(0x4C,0x4C,0x4C)    // _GetSysColor(COLOR_INFOTEXT)
#define RGB_TOOLTIP_BORDER_COLOR        _RGB(107, 107, 107)    // _GetSysColor(COLOR_INFOTEXT)

// Color for button
#define RGB_BUTTON_NORMAL_FILL_COLOR1      _RGB(242,242,242)
#define RGB_BUTTON_NORMAL_FILL_COLOR2      _RGB(235,235,235)
#define RGB_BUTTON_NORMAL_FILL_COLOR3      _RGB(221,221,221)
#define RGB_BUTTON_NORMAL_FILL_COLOR4      _RGB(207,207,207)

#define RGB_BUTTON_HOT_FILL_COLOR1        _RGB(234,246,253)
#define RGB_BUTTON_HOT_FILL_COLOR2        _RGB(217,240,252)
#define RGB_BUTTON_HOT_FILL_COLOR3        _RGB(190,230,253)
#define RGB_BUTTON_HOT_FILL_COLOR4        _RGB(167,217,245)

#define RGB_BUTTON_PUSHED_FILL_COLOR1      _RGB(229,244,252)
#define RGB_BUTTON_PUSHED_FILL_COLOR2      _RGB(196,229,249)
#define RGB_BUTTON_PUSHED_FILL_COLOR3      _RGB(152,209,239)
#define RGB_BUTTON_PUSHED_FILL_COLOR4      _RGB(109,182,221)

#define BUTTON_FIRST_HALF_PERCENTAGE      47

// Color for header
#define RGB_HEADER_NORMAL_FILL_COLOR1      _RGB(255,255,255)
#define RGB_HEADER_NORMAL_FILL_COLOR2      _RGB(255,255,255)
#define RGB_HEADER_NORMAL_FILL_COLOR3      _RGB(247,248,250)
#define RGB_HEADER_NORMAL_FILL_COLOR4      _RGB(241,242,244)

#define RGB_HEADER_HOT_FILL_COLOR1        _RGB(227,247,255)
#define RGB_HEADER_HOT_FILL_COLOR2        _RGB(227,247,255)
#define RGB_HEADER_HOT_FILL_COLOR3        _RGB(189,237,255)
#define RGB_HEADER_HOT_FILL_COLOR4        _RGB(183,231,251)

#define RGB_HEADER_PUSHED_FILL_COLOR1      _RGB(188,228,249)
#define RGB_HEADER_PUSHED_FILL_COLOR2      _RGB(227,247,255)
#define RGB_HEADER_PUSHED_FILL_COLOR3      _RGB(141,214,247)
#define RGB_HEADER_PUSHED_FILL_COLOR4      _RGB(138,209,245)

#define RGB_HEADER_SORT_FILL_COLOR1        _RGB(242,249,252)
#define RGB_HEADER_SORT_FILL_COLOR2        _RGB(242,249,252)
#define RGB_HEADER_SORT_FILL_COLOR3        _RGB(225,241,249)
#define RGB_HEADER_SORT_FILL_COLOR4        _RGB(216,236,246)

#define HEADER_FIRST_HALF_PERCENTAGE      41

#define RGB_COMBO_BORDER_NORMAL          _RGB(190, 190, 190)
#define RGB_COMBO_BORDER_HILIGHT        _RGB(60, 127, 177)

#define RGB_TRANSPARENT              _RGB(255,0,255)

#define RGB_SELECTION_BORDER          _GetSysColor(COLOR_HIGHLIGHT)

#define ALPHA_SELECTION_FILL          70

//#define IMPLEMENT_BITMAP_TRANSITION  // TODO


typedef struct tagCOLORS4 {
  COLORREF c1;
  COLORREF c2;
  COLORREF c3;
  COLORREF c4;
} COLORS4, *PCOLORS4;

typedef const COLORS4*  PCCOLORS4;

enum CDTBT {
  CDTBT_PUSHBUTTON,
  CDTBT_HEADER,
  CDTBT_COMBODOWNBUTTON,
  CDTBT_COMBOBUTTON,
};

enum CDSTATEID {
  CDSTATEID_DISABLED,
  CDSTATEID_HOT,
  CDSTATEID_NORMAL,
  CDSTATEID_PRESSED,
  CDSTATEID_MAX
};


#ifndef PW_CLIENTONLY
#define PW_CLIENTONLY           0x00000001
#endif // PW_CLIENTONLY

#ifndef AW_BLEND
#define AW_HOR_POSITIVE             0x00000001
#define AW_HOR_NEGATIVE             0x00000002
#define AW_VER_POSITIVE             0x00000004
#define AW_VER_NEGATIVE             0x00000008
#define AW_CENTER                   0x00000010
#define AW_HIDE                     0x00010000
#define AW_ACTIVATE                 0x00020000
#define AW_SLIDE                    0x00040000
#define AW_BLEND                    0x00080000
#endif // AW_BLEND

// References:
// http://www.codeproject.com/KB/list/CGridListCtrlEx.aspx
// http://msdn.microsoft.com/en-us/library/dd373487(VS.85).aspx

#ifndef VSCLASS_BUTTON
#define VSCLASS_BUTTON      L"BUTTON"
#endif // VSCLASS_BUTTON

#ifndef VSCLASS_COMBOBOX
#define VSCLASS_COMBOBOX    L"COMBOBOX"
#endif // VSCLASS_COMBOBOX

#ifndef VSCLASS_HEADER
#define VSCLASS_HEADER      L"HEADER"
#endif // VSCLASS_HEADER


#ifdef MSVC_NEW_VER
#include <VSStyle.h>
#else
enum BUTTONPARTS {
  BP_PUSHBUTTON = 1,
  BP_RADIOBUTTON = 2,
  BP_CHECKBOX = 3,
  BP_GROUPBOX = 4,
  BP_USERBUTTON = 5,
  BP_COMMANDLINK = 6,
  BP_COMMANDLINKGLYPH = 7,
};

enum PUSHBUTTONSTATES {
  PBS_NORMAL = 1,
  PBS_HOT = 2,
  PBS_PRESSED = 3,
  PBS_DISABLED = 4,
  PBS_DEFAULTED = 5,
  PBS_DEFAULTED_ANIMATING = 6,
};

enum CHECKBOXSTATES {
  CBS_UNCHECKEDNORMAL = 1,
  CBS_UNCHECKEDHOT = 2,
  CBS_UNCHECKEDPRESSED = 3,
  CBS_UNCHECKEDDISABLED = 4,
  CBS_CHECKEDNORMAL = 5,
  CBS_CHECKEDHOT = 6,
  CBS_CHECKEDPRESSED = 7,
  CBS_CHECKEDDISABLED = 8,
  CBS_MIXEDNORMAL = 9,
  CBS_MIXEDHOT = 10,
  CBS_MIXEDPRESSED = 11,
  CBS_MIXEDDISABLED = 12,
  CBS_IMPLICITNORMAL = 13,
  CBS_IMPLICITHOT = 14,
  CBS_IMPLICITPRESSED = 15,
  CBS_IMPLICITDISABLED = 16,
  CBS_EXCLUDEDNORMAL = 17,
  CBS_EXCLUDEDHOT = 18,
  CBS_EXCLUDEDPRESSED = 19,
  CBS_EXCLUDEDDISABLED = 20,
};

enum COMBOBOXPARTS {
  CP_DROPDOWNBUTTON = 1,
  CP_BACKGROUND = 2,
  CP_TRANSPARENTBACKGROUND = 3,
  CP_BORDER = 4,
  CP_READONLY = 5,
  CP_DROPDOWNBUTTONRIGHT = 6,
  CP_DROPDOWNBUTTONLEFT = 7,
  CP_CUEBANNER = 8,
};

enum COMBOBOXSTYLESTATES {
  CBXS_NORMAL = 1,
  CBXS_HOT = 2,
  CBXS_PRESSED = 3,
  CBXS_DISABLED = 4,
};

enum HEADERPARTS {
  HP_HEADERITEM = 1,
  HP_HEADERITEMLEFT = 2,
  HP_HEADERITEMRIGHT = 3,
  HP_HEADERSORTARROW = 4,
  HP_HEADERDROPDOWN = 5,
  HP_HEADERDROPDOWNFILTER = 6,
  HP_HEADEROVERFLOW = 7,
};

enum HEADERITEMSTATES {
  HIS_NORMAL = 1,
  HIS_HOT = 2,
  HIS_PRESSED = 3,
  HIS_SORTEDNORMAL = 4,
  HIS_SORTEDHOT = 5,
  HIS_SORTEDPRESSED = 6,
  HIS_ICONNORMAL = 7,
  HIS_ICONHOT = 8,
  HIS_ICONPRESSED = 9,
  HIS_ICONSORTEDNORMAL = 10,
  HIS_ICONSORTEDHOT = 11,
  HIS_ICONSORTEDPRESSED = 12,
};

typedef HANDLE HTHEME;          // handle to a section of theme data for struct
#endif // MSVC_NEW_VER

// MSDN suggests that: Do not link to UxTheme.lib.
// see http://msdn.microsoft.com/en-us/library/bb773175(VS.85).aspx#whistler_windows

// CCustomDrawHelper

enum OUTPUTTYPE {
  OUTPUTTYPE_NOP,
  OUTPUTTYPE_BITBLT,
  OUTPUTTYPE_TRANSPARENTBLT,
};

#include "CustomDrawUtils.inl"


struct CCustomDrawHelper {
  inline BOOL ShouldFillBackground() {
    BOOL bShouldFill = m_bSelected || m_bIsHotItem;
    return bShouldFill;
  }
  BOOL m_bWndHasFocus;
  BOOL m_bFocusItem;
  BOOL m_bSelected;
  BOOL m_bIsHotItem;
  BOOL m_bDrawBorderWhenFill;
  BOOL m_bIsPressed;
  BOOL m_bWndEnabled;

  RECT  m_rcBounds;
#include "CustomDrawHelper.inl"
};

// CSimpleMemDC
